{"version":3,"sources":["webpack:///./src/components/header.js","webpack:///./src/components/card.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js"],"names":["Header","props","_this","_React$Component","call","this","HandeleScroll","event","window","pageYOffset","setState","hasScrolled","state","componentDidMount","addEventListener","render","react_default","a","createElement","className","gatsby_link_default","to","React","Component","propTypes","siteTitle","PropTypes","string","defaultProps","Card","style","widthone","contentone","widthtwo","alt","src","contenttwo","IndexPage","layout","seo","title","keywords","header","card","width","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","Consumer","staticQueryData","data","query","children","Error","object","isRequired","func","m","module","exports","require","default","Layout","_ref","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","Fragment","margin","Date","getFullYear","href","_public_static_d_755544856_json__WEBPACK_IMPORTED_MODULE_0__","node","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","array","arrayOf"],"mappings":"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","file":"component---src-pages-index-js-36ffa984c1b0ff8f54c3.js","sourcesContent":["import Link from 'gatsby-link'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\n//https://css-tricks.com/snippets/css/complete-guide-grid/\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      hasScrolled: false\n    }\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.HandeleScroll)\n  }\n  HandeleScroll = (event) => {\n    const scrollTop = window.pageYOffset\n\n    if (scrollTop > 50) {\n      this.setState({hasScrolled: true})\n    } else {\n      this.setState({hasScrolled: false})\n    }\n  } \n    render() {\n    return (\n        <div className={this.state.hasScrolled ? 'Header HeaderScrolled' : 'Header'}> \n          <div className=\"HeaderGroup\">\n            <h1 className=\"firstPage\">Oliver <br /> Parkinson</h1>\n            <Link className=\"Portfolio\" to=\"/page-2/\">Portfolio</Link>\n            <Link className=\"Contact\" to=\"/page-2/\">Contact</Link>\n          </div>\n        </div>\n    )\n  }\n}\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from 'react'\nimport '../components/layout.css'\n\nconst Card = props => (\n    <div className=\"Card\">\n        <div className=\"firstCard\" style={props.widthone}>\n            <h2>{props.contentone}</h2>\n        </div>\n        <div className=\"secondCard\" style={props.widthtwo}>\n            <img alt=\"website preview\" src={props.contenttwo} />\n        </div>\n    </div>\n)\n\nexport default Card","import React from \"react\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Header from \"../components/header\";\nimport \"../components/header.css\"\nimport Card from \"../components/card\";\n\nconst IndexPage = () => (\n  \n  <Layout>\n    <SEO title=\"Home\" keywords={[`Oliver`, `Parkinson`, `Oliver Parkinson`, 'Oliver Parkinson software development', 'Oliver Parkinson Portfolio']} />\n    <Header />\n    <div className=\"Hero\">\n      <div className=\"scrollText\">\n        <h2>Welcome, <br /> Scroll to <br/> explore.</h2>\n      </div>\n    </div>\n    <Card widthone={{width:'25%'}} widthtwo={{width:'75%'}} contentone=\"Harrison Tate\" contenttwo=\"hello\" />\n  </Layout>\n)\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <div\n          style={{\n            margin: `0 auto`,\n          }}\n        >\n          <main>{children}</main>\n          <footer>\n          <h3>\n            © {new Date().getFullYear()}, Built by\n            {` `}\n            <a href=\"http://oliverparkinson.co.uk\">Oliver Parkinson</a>\n          </h3>\n          </footer>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n"],"sourceRoot":""}